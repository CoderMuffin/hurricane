==76== Memcheck, a memory error detector
==76== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==76== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==76== Command: ./main
==76== Parent PID: 75
==76== 
==76== Use of uninitialised value of size 8
==76==    at 0x4016AE: memcpy (string_fortified.h:29)
==76==    by 0x4016AE: hc_init_geometries (geometry.c:53)
==76==    by 0x401139: main (main.c:8)
==76== 
==76== Invalid write of size 8
==76==    at 0x4016AE: memcpy (string_fortified.h:29)
==76==    by 0x4016AE: hc_init_geometries (geometry.c:53)
==76==    by 0x401139: main (main.c:8)
==76==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==76== 
==76== 
==76== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==76==  Access not within mapped region at address 0x0
==76==    at 0x4016AE: memcpy (string_fortified.h:29)
==76==    by 0x4016AE: hc_init_geometries (geometry.c:53)
==76==    by 0x401139: main (main.c:8)
==76==  If you believe this happened as a result of a stack
==76==  overflow in your program's main thread (unlikely but
==76==  possible), you can try to increase the size of the
==76==  main thread stack using the --main-stacksize= flag.
==76==  The main thread stack size used in this run was 8388608.
==76== 
==76== HEAP SUMMARY:
==76==     in use at exit: 91,955 bytes in 7 blocks
==76==   total heap usage: 8 allocs, 1 frees, 92,979 bytes allocated
==76== 
==76== LEAK SUMMARY:
==76==    definitely lost: 0 bytes in 0 blocks
==76==    indirectly lost: 0 bytes in 0 blocks
==76==      possibly lost: 0 bytes in 0 blocks
==76==    still reachable: 91,955 bytes in 7 blocks
==76==         suppressed: 0 bytes in 0 blocks
==76== Rerun with --leak-check=full to see details of leaked memory
==76== 
==76== Use --track-origins=yes to see where uninitialised values come from
==76== For lists of detected and suppressed errors, rerun with: -s
==76== ERROR SUMMARY: 3 errors from 2 contexts (suppressed: 0 from 0)
