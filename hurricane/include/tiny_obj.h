typedef struct;
typedef struct;
typedef struct;
typedef struct;
static void skip_space(const char **token);
static void skip_space_and_cr(const char **token);
static int until_space(const char *token);
static size_t length_until_newline(const char *token, size_t n);
static size_t length_until_line_feed(const char *token, size_t n);
static int my_atoi(const char *c);
static int fixIndex(int idx, size_t n);
static tinyobj_vertex_index_t parseRawTriple(const char **token);
static int parseInt(const char **token);
static int tryParseDouble(const char *s, const char *s_end, double *result);
static float parseFloat(const char **token);
static void parseFloat2(float *x, float *y, const char **token);
static void parseFloat3(float *x, float *y, float *z, const char **token);
static size_t my_strnlen(const char *s, size_t n);
static char *my_strdup(const char *s, size_t max_length);
static char *my_strndup(const char *s, size_t len);
char *dynamic_fgets(char **buf, size_t *size, FILE *file);
static void initMaterial(tinyobj_material_t *material);
typedef struct hash_table_entry_t;
typedef struct;
static unsigned long hash_djb2(const unsigned char *str);
static void create_hash_table(size_t start_capacity, hash_table_t *hash_table);
static void destroy_hash_table(hash_table_t *hash_table);
static void hash_table_maybe_grow(size_t new_n, hash_table_t *hash_table);
static int hash_table_exists(const char *name, hash_table_t *hash_table);
static long hash_table_get(const char *name, hash_table_t *hash_table);
static int is_line_ending(const char *p, size_t i, size_t end_i);
typedef struct;
typedef enum;
typedef struct;
static size_t basename_len(const char *filename, size_t filename_length);
void tinyobj_attrib_init(tinyobj_attrib_t *attrib);
void tinyobj_attrib_free(tinyobj_attrib_t *attrib);
void tinyobj_shapes_free(tinyobj_shape_t *shapes, size_t num_shapes);
